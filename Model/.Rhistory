group_by(stepNo) %>%
summarise(time = mean(time),
k.fix.prob = mean(knopf.fix),
f.fix.prob = mean(flasche.fix)) %>%
arrange(time) %>%
pivot_longer(
cols = c("k.fix.prob", "f.fix.prob"),
names_to = "fix.prob.type",
values_to = "fix.prob"
)
# Plot fixation probabilities
ggplot(fix.prob.cond2,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
geom_point()
fix.prob.cond3 <- act.cond3 %>%
# group_by(stepNo, subStep) %>%
group_by(stepNo) %>%
summarise(time = mean(time),
k.fix.prob = mean(knopf.fix),
f.fix.prob = mean(flasche.fix)) %>%
arrange(time) %>%
pivot_longer(
cols = c("k.fix.prob", "f.fix.prob"),
names_to = "fix.prob.type",
values_to = "fix.prob"
)
# Plot fixation probabilities
ggplot(fix.prob.cond3,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type)) +
xlim(0,2000) +
geom_point()
source('run-all.R')
source('run-all.R')
source('run-all.R')
sink('output-cond-2.txt')
source('run-all.R')
sink()
getwd()
0.25 * 1.3905620875659
sink('output-cond-2.txt')
source('run-all.R')
sink()
(0.25 * 1.3905620875659) + (0.25 * 1.90138771133189 )
(0.25 * 1.3905620875659) + (0.25 * 1.90138771133189)
(0.25 * 1.90138771133189)
sink('output-cond-2.txt')
source('run-all.R')
sink()
sink('output-cond-1.txt')
source('run-all.R')
sink()
sink('output-cond-3.txt')
source('run-all.R')
sink()
act.cond1 <- read_csv('R-ACT-R/output-10k/cond-1/act-out-1.csv') %>%
na.omit()
act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(time = mean(time),
k.act = mean(knopf.act),
f.act = mean(flasche.act)) %>%
arrange(time) %>%
print(n = Inf)
# Generate fixations
# 'map_int()' is needed because otherwise sample() isn't called
# for each row, but only once since ifelse() evaluates for all rows
act.cond1 <- act.cond1 %>%
mutate(knopf.fix = map_int(seq_len(n()), ~ {
if (knopf.act[.x] > flasche.act[.x]) {
return(1)
} else if (knopf.act[.x] < flasche.act[.x]) {
return(0)
} else {
return(sample(c(0, 1), 1))
}
})) %>%
mutate(flasche.fix = 1- knopf.fix)
# Sanity check
act.cond1 %>%
filter(knopf.act == flasche.act) %>%
summarise(mean(knopf.fix), mean(flasche.fix))
fix.prob.cond1 <- act.cond1 %>%
# filter(stepNo > 2) %>%
# group_by(stepNo, subStep) %>%
group_by(stepNo) %>%
summarise(time = mean(time),
k.fix.prob = mean(knopf.fix),
f.fix.prob = mean(flasche.fix)) %>%
arrange(time) %>%
pivot_longer(
cols = c("k.fix.prob", "f.fix.prob"),
names_to = "fix.prob.type",
values_to = "fix.prob"
)
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
geom_point()
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point()
fix.prob.cond1
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705)
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed")
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed", color = "gray")
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed", color = "darkgray")
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed", color = "gray3")
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed", color = "gray30")
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, , linetype="dashed", color = "gray30") +
scale_fill_discrete(breaks=c("trt1","ctrl","trt2"))
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_fill_discrete(breaks=c("trt1","ctrl","trt2"))
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_fill_discrete(breaks=c("trt1","ctrl"))
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_linetype_manual(name = "Your Legend Title",
values = c("solid", "dashed", "dotted"), # Example linetypes
labels = c("Label 1", "Label 2", "Label 3")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_linetype_manual(name = "Your Legend Title",
values = c("dashed", "dotted"), # Example linetypes
labels = c("Label 1", "Label 2")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_linetype_manual(name = "Your Legend Title",
values = c("dashed", "solid"), # Example linetypes
labels = c("Label 1", "Label 2")) # Corresponding labels
act.cond1
max(act.cond1$stepNo)
max(act.cond3$stepNo)
ls()
act.cond1 %>%
group_by(stepNo) %>%
summarise(stepNoStart = min(time))
fix.prob.cond1
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dashed", color = "gray30") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
geom_vline(xintercept = 705, linetype="dotted", color = "gray30") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('')
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
main('XX') +
geom_vline(xintercept = 705, linetype="dotted", color = "gray30") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = 705, linetype="dotted", color = "gray30") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(time = mean(time),
k.act = mean(knopf.act),
f.act = mean(flasche.act)) %>%
arrange(time) %>%
print(n = Inf)
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = c(705, 800), linetype="dotted", color = "gray30") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = c(705, 800), linetype="dotted", color = "gray") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = c(705, 800), linetype="dotted", color = "gray50") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
fix.prob.cond1
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(mean(time))
subSteps
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(mean(time)) %>%
arrange(time)
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(time = mean(time)) %>%
arrange(time)
subSteps
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$time, linetype="dotted", color = "gray50") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$time, linetype="dotted", color = "gray60") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$time, linetype="dotted", color = "gray70") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(subSteptime = mean(time), stageStartTime = min(time)) %>%
arrange(time)
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(subSteptime = mean(time)) %>%
arrange(time)
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(subSteptime = mean(time), stageStartTime = min(time)) %>%
arrange(subSteptime)
subSteps
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(subSteptime = mean(time)) %>%
arrange(subSteptime) %>%
group_by(stepNo) %>%
summarise(stageStartTime = min(time))
stages <- act.cond1 %>%
group_by(stepNo) %>%
summarise(stageStartTime = min(time))
stages
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = stages$stageStartTime, linetype="dotted", color = "gray50") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = stages$stageStartTime, linetype="dashed", color = "gray50") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
subSteps <- act.cond1 %>%
group_by(stepNo, subStep) %>%
summarise(subSteptime = mean(time)) %>%
arrange(subSteptime)
steps <- act.cond1 %>%
group_by(stepNo) %>%
summarise(stepStartTime = min(time))
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray50") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray70") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray40") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray45") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"), # Example linetypes
labels = c("Flasche", "Knopf")) # Corresponding labels
subSteps
subSteps %>% print(n=30)
pronOnsetStep = DetOnsetStep = 3
pronOnset = steps %>% filter(stepNo == pronOnsetStep) %>% select(stepStartTime)
pronOnset
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray45") +
geom_vline(xintercept = pronOnset, color = "gray45") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"),
labels = c("Flasche", "Knopf"))
pronOnset
str(pronOnset)
dim(pronOnset)
pronOnset = steps %>% filter(stepNo == pronOnsetStep) %>% pull(stepStartTime)
dim(pronOnset)
str(pronOnset)
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime, linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime, linetype="dashed", color = "gray45") +
geom_vline(xintercept = pronOnset, color = "gray45") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"),
labels = c("Flasche", "Knopf"))
# Plot fixation probabilities
ggplot(fix.prob.cond1,
aes(x=time, y=fix.prob, group=fix.prob.type)) +
geom_line(aes(linetype=fix.prob.type )) +
xlim(0,2000) +
geom_point() +
ylab('') +
xlab('Time') +
geom_vline(xintercept = subSteps$subSteptime,
linetype="dotted", color = "gray70") +
geom_vline(xintercept = steps$stepStartTime,
linetype="dashed", color = "gray45") +
# geom_vline(xintercept = pronOnset, color = "gray45") +
scale_linetype_manual(name = "",
values = c("dashed", "solid"),
labels = c("Flasche", "Knopf"))
input.stages
input.stages[1]
q()
